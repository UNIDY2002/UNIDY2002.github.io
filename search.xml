<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CLion安装经验分享</title>
    <url>/2019/11/28/CLion%E5%AE%89%E8%A3%85%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/</url>
    <content><![CDATA[<p>热衷于安利JetBrains家的产品……</p>
<a id="more"></a>

<p>我前些天建了个博客，正愁没东西写呢，正好wtz同学看上了我的CLion。这可把我乐坏了！一来我的博客可以有点正经的文章，二来我终于有机会安利这全宇宙第一的IDE了<del>（引战言论）</del>。</p>
<p><strong>有一款超棒的IDE是什么体验？相信我，CLion能让你从入门到上瘾……</strong></p>
<blockquote>
<p>注：</p>
<ol>
<li>本文适用于Windows用户，对于Mac和Linux用户情形可能会有或大或小的差异。</li>
<li>本文主要凭借记忆，未经过实际验证，因此所描述的内容可能有所跳跃，甚至与实际情形不符。若有这种情况发生，欢迎联系我指出。如果你能够提供一些安装过程中的截图，那我也更加欢迎。</li>
</ol>
</blockquote>
<hr>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p><strong>如果你的电脑上还没有MinGW，需要<a href="https://sourceforge.net/projects/mingw/files/" target="_blank" rel="noopener">下载</a>MinGW安装包。并且，安装的时候留个心，记一下自己把MinGW安装到什么位置了（后面配置会用到）。</strong></p>
<blockquote>
<p>如何简易判断电脑上有没有MinGW？</p>
<p>打开cmd，输入命令<code>gcc -v</code>，如果可以打印出版本信息，就表示已有MinGW。</p>
<p><strong>另外，一般来说，如果你的电脑上有Dev-C++，MinGW应该已经跟着顺带安装好了。</strong></p>
</blockquote>
<p>下面安装CLion。</p>
<p>CLion是一款收费产品，不过对学生免费——只要你有自己的学校邮箱。所以，首先你要<a href="https://www.jetbrains.com/shop/eform/students" target="_blank" rel="noopener">申请一个学生账号</a>。</p>
<p>然后，<a href="https://www.jetbrains.com/clion/download/#section=windows" target="_blank" rel="noopener">下载</a>CLion安装包。</p>
<p>安装完成后，运行CLion，第一次使用需要激活。你既然已经有学生账号了，那就可以光明正大地选择<code>JetBrains Account</code>通道进行验证了。（这一步很有可能与事实有出入，好像激活是在配置的后面……？如果真的这样，最好联系我修改哈~）</p>
<p>一切准备就绪后，就是激动人心的配置部分啦！</p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p><strong>配置有多重要？一方面，如果不能正确配置，那你的CLion可能连用都用不了。另一方面，良好的配置可以大大提升你的使用体验。</strong></p>
<h3 id="正确配置"><a href="#正确配置" class="headerlink" title="正确配置"></a>正确配置</h3><p>启动CLion后，作为新用户，你估计会遇到一个<code>Customize CLion</code>的界面。（如果你遇到的是<code>Welcome to CLion</code>或者已经是写代码的页面了，赶紧联系我修改这份教程~）</p>
<hr>
<p>首先是<code>UI Themes</code>，就是界面颜色风格，这个挑自己喜欢的风格（好像黑色的比较受欢迎）。（不过后面会教你自定义一套自己喜欢的风格。）</p>
<p><strong>接下来，就是重中之重：<code>Toolchains</code>的配置。</strong>因为它非常重要，所以我也在后面配上了截图，可以对照着看，<strong>但一定要先读我写的文字说明！</strong></p>
<p><code>Environment</code>下方有个下拉菜单，选<code>MinGW</code>。</p>
<p>这时，IDE应该会自动帮你找寻MinGW的位置。<strong>但自动生成的东西有可能不靠谱，所以你先检查一下，它找的MinGW是不是你刚刚安装的那个。</strong></p>
<blockquote>
<p>假如之前安装了Dev-C++，这次就没装MinGW，怎么知道MinGW的位置呢？找到你Dev-C++的安装目录，下面应该有个MinGW文件夹（不过名字可能是MinGW64之类的），这就是你MinGW的位置了。</p>
</blockquote>
<p><strong>大部分情况下，这个空里的路径应该以<code>...\MinGW</code>或者<code>...\MinGW64</code>结尾。</strong></p>
<p>选择好之后，IDE就会自动帮你填完后面的几个空（这时它自动生成的基本上就是靠谱的了）。如果你看到没有小圈圈在转，也没有红色的感叹号，那就代表一切顺利。</p>
<blockquote>
<p>假如出现了异常……首先再次确认自己刚刚MinGW的位置有没有填对，是不是你刚刚安装的MinGW。如果还不行，那就参考下面的截图，自己想办法吧……（无奈脸）</p>
</blockquote>
<p><img src="https://unidy2002.github.io/images/public/IntroToCLion/001.png" alt="Toolchains配置完成截图参考"></p>
<hr>
<p>（下面的<code>Default plugins</code>和<code>Featured plugins</code>我已经记忆模糊了，所以仅供参考。）</p>
<p>下一步，<code>Default plugins</code>，就按照它默认的来好了，可以直接点<code>Next</code>。</p>
<p><code>Featured plugins</code>里面，应该是把你引到插件市场里。<strong>这里，我强烈推荐一款插件：<code>TabNine</code>。</strong>它是一款利用机器学习进行代码补全的插件，可以有效提升编程体验。后面细讲。（当然这里只是推荐，并不是刚需，可以选择不装。<strong>在你还不太熟悉CLion时，也可以不急着装。</strong>）</p>
<hr>
<p>基本的配置完成后，你就可以进行编程啦。</p>
<p>在这里，建议你先在电脑中选好一个位置，以后就专门用来放CLion的项目。</p>
<p>先试着写一个Hello World吧。</p>
<p>在<code>New Project</code>的窗口中，选择<code>C++ Executable</code>，<code>Location</code>里面填自己选好的位置（例如<code>D:\CLion_Project\HelloWorld</code>），其中，地址的最后一段是这个项目的名称。</p>
<p><code>Language standard</code>是语言标准，如果刚刚学习C++不知道选什么就按它默认的来。</p>
<p><code>Create</code>之后，进入代码界面，它应该会默认提供一个Hello World的代码。<strong>先等一会儿，等右下角的进度条完成。</strong></p>
<p>进度条完成后，你有两种方法执行程序。</p>
<ol>
<li>右上角有一排绿色的按钮，有锤子（<code>build</code>）、三角（<code>run</code>）、虫子（<code>debug</code>）什么的，点<code>run</code>，稍微过一会儿就能看到运行结果了。</li>
<li>你的<code>main</code>函数左边应该也会有一个小三角，点击以后选择<code>run</code>同样可以运行。</li>
</ol>
<hr>
<p>如果到现在一切顺利，就代表你的CLion已经成功安装并配置，理论上讲以后都可以正常用了。不过，为了拥有更好的编程体验，可以再进行一些个性化的配置。</p>
<h3 id="进阶配置"><a href="#进阶配置" class="headerlink" title="进阶配置"></a>进阶配置</h3><p>左上角，找到<code>File</code>，下拉菜单里找到<code>Settings</code>，进行进一步的配置。</p>
<p>代码又细又淡的字体一定让你很讨厌吧！找到<code>Editor</code>，选择<code>Font</code>，把<code>Font</code>字段设置成<code>Consolas</code>。</p>
<p>接下来就是<code>Color Scheme</code>，也就是非常快乐的调颜色阶段。<del>（我曾经花了一下午调颜色……）</del></p>
<p><strong>为什么需要调颜色？</strong></p>
<p>C++是一门拥有<del>过于</del>丰富特性的语言，不同的标志类型和语法特性可以通过不同的颜色清晰地体现出来。而默认的配色方案比较单调，这时就可以充分发挥你DIY的功力了。</p>
<p>而且屏幕上五彩斑斓（但不要调得太花了）的代码本身就会让你赏心悦目呢！</p>
<p>还有，配色不仅仅是上不同的颜色，还可以选择加粗、斜体或者加阴影。所以，可以发挥的空间很大呢。</p>
<p>如果第一次使用，还比较陌生，也可以照搬我当前用的配置。详见后文<strong>导入配色方案</strong>。</p>
<p>与C++关系比较大的，应该是<code>General</code>、<code>Language Defaults</code>和<code>C/C++</code>。调这些就行了。</p>
<p>额……说是进阶的配置，其实也就这些。不过，应该已经可以很好地提升编程体验了~</p>
<hr>
<h3 id="导入配色方案"><a href="#导入配色方案" class="headerlink" title="导入配色方案"></a>导入配色方案</h3><p>如果需要我自己用的配色方案，首先<a href="https://unidy2002.github.io/files/Splendid.icls">下载</a>。</p>
<p>然后，在<code>Settings</code>的<code>Editor</code>下<code>Color Scheme</code>主菜单中，有一个<code>Scheme</code>下拉列表，右边还有一个小齿轮的，点击小齿轮，<code>Import Scheme</code>，把外部配色方案导入IDE，应该就可以了。</p>
<p>当然，导入之后你也可以自己继续进行一定的微调。</p>
<h3 id="关于TabNine"><a href="#关于TabNine" class="headerlink" title="关于TabNine"></a>关于TabNine</h3><p>这个东西介绍见<a href="https://tabnine.com/" target="_blank" rel="noopener">官网</a>，不过其实也不用去看，只要知道它可以有效地对你接下来要输入的代码进行预测，并提供代码补全建议。</p>
<p>在CLion中使用时，如果它给的第一条建议正好就是你想要的，那就直接按回车。如果是后面的某条建议，那就先按几次下键，然后再回车。</p>
<p><strong>初次使用的时候，需要先写几段代码，相当于训练一下你的TabNine，让它熟悉你的代码风格，所以一开始它不会给你提示（你这时候看到的代码补全是IDE预设的）。等用一段时间，你会发现TabNine变得越来越聪明了。</strong></p>
<p><strong>TabNine有一个缺陷，就是比较占CPU（毕竟自带机器学习）。</strong>反正我敲代码比较快的时候会发现排风扇也在呼呼转。</p>
<p>然后可能会有一些小bug。<del>（而且TabNine为CLion做的插件似乎不太上心……？）</del></p>
<p>如果需要停用/卸载TabNine，屏幕左上角<code>File-&gt;Settings-&gt;Plugins-&gt;TabNine-&gt;Disable/Uninstall</code>。</p>
<hr>
<h2 id="技巧与注意事项"><a href="#技巧与注意事项" class="headerlink" title="技巧与注意事项"></a>技巧与注意事项</h2><ol>
<li><p>CLion的代码以项目为单位，一个项目中可以有很多很多文件，它们之间可以相互引用。但切记：<strong>正常情况下，一个项目中<code>main</code>函数只允许有一个</strong>。也就是说如果你完成了一道作业题想做下一道，不要在同一个项目中新建另一个cpp文件（并放入另一道题的<code>main</code>），要么重开一个项目，要么直接把上一道题的代码清空（显然后面这种方式更快捷，也更省空间）。</p>
<blockquote>
<p>坦诚地说，因为无论代码内容有多少，CLion都会生成一个完整的项目文件，所以如果只是为了完成一些小型程序而使用CLion，确实比较浪费电脑资源。不过采用直接清空上一份代码的方式可以规避这一困境，而且CLion用起来真的舒服。</p>
</blockquote>
</li>
<li><p>熟练运用组合键<code>Ctrl+Alt+L</code>。它可以将你的代码格式化，增强代码可读性。（像我现在已经敲几行就整理一下代码了……简直过于方便……）</p>
</li>
<li><p>重视一下IDE给出的Warning(s)（虽然绝不以消除所有Warning(s)为目标）。CLion给的Warning(s)质量还是普遍比较高的。首先，它会在右侧的滚动条处以黄色表示出来，方便你看看哪里还有需要注意的地方。然后，不同级别和类型的Warning(s)会用不同的方式在代码中呈现出来<strong>（有些地方的代码会变成灰色，有些则是高亮出来）</strong>，鼠标悬浮在上方就能看到具体的提示。其中，<code>Clang-Tidy</code>类型的Warning(s)一般可以忽略。</p>
<blockquote>
<p><code>Typo</code>类型的Warning(s)表示拼写错误。虽然拼写错误并不会直接导致程序的错误，但还是尽量避免。</p>
<p>如果确实是单词拼错了，把光标放到那个单词处，按下组合键<code>Alt+Enter</code>，选择<code>Typo: Rename to...</code>，然后进行更正。它会把项目中这个所有出现这个变量的地方一起改好。</p>
<p>如果这个单词确实存在，只是IDE没有收录，还是<code>Alt+Enter</code>，把它保存到<code>project-level dictionary</code>。</p>
<p>如果你的变量名是多个单词的组合，请使用小驼峰命名法（<code>smallCamelCase</code>）、大驼峰命名法（<code>BigCamelCase</code>）、使用下划线分隔的小写字母命名法（<code>lower_case_with_underscores</code>）、使用下划线分隔的大写字母命名法（<code>UPPER_CASE_WITH_UNDERSCORES</code>）。</p>
<p>如果你的变量名是汉语拼音甚至是汉语拼音缩写……还是算了吧……请设想一下在别人的代码中看到<code>bt</code>、<code>wz</code>、<code>djadd</code>等名称时内心的崩溃感……</p>
<p><del>当然我不会告诉你最新的语言标准中允许真的用汉字做变量名……（试试<code>int 测试;</code>）</del></p>
</blockquote>
<p>利用好Warning(s)提示可以有效地避免一些低级错误。试着在IDE中粘贴以下代码（不用去运行），看看它给出了哪些Warning(s)。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">foo</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; m;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; n * m &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">culculate</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; a + b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    foo(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> s;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; s &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">10</span>][<span class="number">10</span>] = &#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; a[i][j] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">while</span> (k &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//Do something but forget to update the variable `k`</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> bar[<span class="number">5</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">9</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (bar[i] = <span class="number">4</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (flag)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"true"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    culculate(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"The end."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>左侧的项目文件结构窗口如果不需要用，可以点击<code>-</code>关掉。不过如果想把它再开出来，双击屏幕上方的文件路径条（例如<code>HelloWorld&gt;main.cpp</code>）即可。（当然，单击路径条也有相应的功能。）</p>
</li>
<li><p>屏幕最左下角的那个按钮可以显示拓展功能框。不过一般的用途是，如果一不小心把输出窗口关掉了，想再开出来，鼠标悬停在上面，点<code>Run</code>。<del>（前提是你得要先run过一遍当前的代码。）</del></p>
</li>
<li><p>如果想要使用Windows系统自带的黑框运行程序，或者是想找到项目生成的<code>.exe</code>文件，在哪找呢？在文件资源管理器中找到你这个项目代码的位置，接着找到<code>cmake-build-debug</code>文件夹，里面就能找到那个<code>.exe</code>文件了。</p>
</li>
<li><p>（未完待续……）</p>
</li>
</ol>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>JetBrains家的产品好是好，但是也有坏处，就是吃内存。所以有人说</p>
<blockquote>
<p>JetBrains：从入门到破产</p>
</blockquote>
<p><del>（因为你可能会为了提升JetBrains产品的使用体验而去买很多很多内存条……反正我还没这么干过）</del></p>
<p>JetBrains家的产品还有更大的一个坏处，就是一旦用了，就再也不想用其他家的IDE了，所谓</p>
<blockquote>
<p>JetBrains：从入门到上瘾</p>
</blockquote>
<p>不过，在我看来，JetBrains的IDE最大的坏处，就是一旦你用了它的一款IDE，就会接着安装它的其它语言的IDE。这不，我的电脑里，从<code>IntelliJ IDEA</code>到<code>CLion</code>，再到<code>PyCharm</code>，以及<code>WebStorm</code>……</p>
<p>有机会再写写JetBrains家别的产品的入坑教程，安利就要安利到底~</p>
]]></content>
      <categories>
        <category>技术宅</category>
      </categories>
      <tags>
        <tag>JetBrains</tag>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>写在前面</title>
    <url>/2019/11/26/%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2/</url>
    <content><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="预计2023年1月1日解封" />
    <label for="pass">预计2023年1月1日解封</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">
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
</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>碎碎念</category>
      </categories>
      <tags>
        <tag>随想</tag>
      </tags>
  </entry>
</search>
