<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CLion安装经验分享</title>
    <url>/2019/11/28/CLion%E5%AE%89%E8%A3%85%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/</url>
    <content><![CDATA[<p>热衷于安利JetBrains家的产品……</p>
<a id="more"></a>

<p>我前些天建了个博客，正愁没东西写呢，正好wtz同学看上了我的CLion。这可把我乐坏了！一来我的博客可以有点正经的文章，二来我终于有机会安利这全宇宙第一的IDE了<del>（引战言论）</del>。</p>
<p><strong>有一款超棒的IDE是什么体验？相信我，CLion能让你从入门到上瘾……</strong></p>
<blockquote>
<p>注：</p>
<ol>
<li>本文适用于Windows用户，对于Mac和Linux用户情形可能会有或大或小的差异。</li>
<li>本文主要凭借记忆，未经过实际验证，因此所描述的内容可能有所跳跃，甚至与实际情形不符。若有这种情况发生，欢迎联系我指出。如果你能够提供一些安装过程中的截图，那我也更加欢迎。</li>
</ol>
</blockquote>
<hr>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p><strong>如果你的电脑上还没有MinGW，需要<a href="https://sourceforge.net/projects/mingw/files/" target="_blank" rel="noopener">下载</a>MinGW安装包。并且，安装的时候留个心，记一下自己把MinGW安装到什么位置了（后面配置会用到）。</strong></p>
<blockquote>
<p>如何简易判断电脑上有没有MinGW？</p>
<p>打开cmd，输入命令<code>gcc -v</code>，如果可以打印出版本信息，就表示已有MinGW。</p>
<p><strong>另外，一般来说，如果你的电脑上有Dev-C++，MinGW应该已经跟着顺带安装好了。</strong></p>
</blockquote>
<p>下面安装CLion。</p>
<p>CLion是一款收费产品，不过对学生免费——只要你有自己的学校邮箱。所以，首先你要<a href="https://www.jetbrains.com/shop/eform/students" target="_blank" rel="noopener">申请一个学生账号</a>。</p>
<p>然后，<a href="https://www.jetbrains.com/clion/download/#section=windows" target="_blank" rel="noopener">下载</a>CLion安装包。</p>
<p>安装完成后，运行CLion，第一次使用需要激活。你既然已经有学生账号了，那就可以光明正大地选择<code>JetBrains Account</code>通道进行验证了。（这一步很有可能与事实有出入，好像激活是在配置的后面……？如果真的这样，最好联系我修改哈~）</p>
<p>一切准备就绪后，就是激动人心的配置部分啦！</p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p><strong>配置有多重要？一方面，如果不能正确配置，那你的CLion可能连用都用不了。另一方面，良好的配置可以大大提升你的使用体验。</strong></p>
<h3 id="正确配置"><a href="#正确配置" class="headerlink" title="正确配置"></a>正确配置</h3><p>启动CLion后，作为新用户，你估计会遇到一个<code>Customize CLion</code>的界面。（如果你遇到的是<code>Welcome to CLion</code>或者已经是写代码的页面了，赶紧联系我修改这份教程~）</p>
<hr>
<p>首先是<code>UI Themes</code>，就是界面颜色风格，这个挑自己喜欢的风格（好像黑色的比较受欢迎）。（不过后面会教你自定义一套自己喜欢的风格。）</p>
<p><strong>接下来，就是重中之重：<code>Toolchains</code>的配置。</strong>因为它非常重要，所以我也在后面配上了截图，可以对照着看，<strong>但一定要先读我写的文字说明！</strong></p>
<p><code>Environment</code>下方有个下拉菜单，选<code>MinGW</code>。</p>
<p>这时，IDE应该会自动帮你找寻MinGW的位置。<strong>但自动生成的东西有可能不靠谱，所以你先检查一下，它找的MinGW是不是你刚刚安装的那个。</strong></p>
<blockquote>
<p>假如之前安装了Dev-C++，这次就没装MinGW，怎么知道MinGW的位置呢？找到你Dev-C++的安装目录，下面应该有个MinGW文件夹（不过名字可能是MinGW64之类的），这就是你MinGW的位置了。</p>
</blockquote>
<p><strong>大部分情况下，这个空里的路径应该以<code>...\MinGW</code>或者<code>...\MinGW64</code>结尾。</strong></p>
<p>选择好之后，IDE就会自动帮你填完后面的几个空（这时它自动生成的基本上就是靠谱的了）。如果你看到没有小圈圈在转，也没有红色的感叹号，那就代表一切顺利。</p>
<blockquote>
<p>假如出现了异常……首先再次确认自己刚刚MinGW的位置有没有填对，是不是你刚刚安装的MinGW。如果还不行，那就参考下面的截图，自己想办法吧……（无奈脸）</p>
</blockquote>
<p><img src="https://unidy2002.github.io/images/public/IntroToCLion/001.png" alt="Toolchains配置完成截图参考"></p>
<hr>
<p>（下面的<code>Default plugins</code>和<code>Featured plugins</code>我已经记忆模糊了，所以仅供参考。）</p>
<p>下一步，<code>Default plugins</code>，就按照它默认的来好了，可以直接点<code>Next</code>。</p>
<p><code>Featured plugins</code>里面，应该是把你引到插件市场里。<strong>这里，我强烈推荐一款插件：<code>TabNine</code>。</strong>它是一款利用机器学习进行代码补全的插件，可以有效提升编程体验。后面细讲。（当然这里只是推荐，并不是刚需，可以选择不装。<strong>在你还不太熟悉CLion时，也可以不急着装。</strong>）</p>
<hr>
<p>基本的配置完成后，你就可以进行编程啦。</p>
<p>在这里，建议你先在电脑中选好一个位置，以后就专门用来放CLion的项目。</p>
<p>先试着写一个Hello World吧。</p>
<p>在<code>New Project</code>的窗口中，选择<code>C++ Executable</code>，<code>Location</code>里面填自己选好的位置（例如<code>D:\CLion_Project\HelloWorld</code>），其中，地址的最后一段是这个项目的名称。</p>
<p><code>Language standard</code>是语言标准，如果刚刚学习C++不知道选什么就按它默认的来。</p>
<p><code>Create</code>之后，进入代码界面，它应该会默认提供一个Hello World的代码。<strong>先等一会儿，等右下角的进度条完成。</strong></p>
<p>进度条完成后，你有两种方法执行程序。</p>
<ol>
<li>右上角有一排绿色的按钮，有锤子（<code>build</code>）、三角（<code>run</code>）、虫子（<code>debug</code>）什么的，点<code>run</code>，稍微过一会儿就能看到运行结果了。</li>
<li>你的<code>main</code>函数左边应该也会有一个小三角，点击以后选择<code>run</code>同样可以运行。</li>
</ol>
<hr>
<p>如果到现在一切顺利，就代表你的CLion已经成功安装并配置，理论上讲以后都可以正常用了。不过，为了拥有更好的编程体验，可以再进行一些个性化的配置。</p>
<h3 id="进阶配置"><a href="#进阶配置" class="headerlink" title="进阶配置"></a>进阶配置</h3><p>左上角，找到<code>File</code>，下拉菜单里找到<code>Settings</code>，进行进一步的配置。</p>
<p>代码又细又淡的字体一定让你很讨厌吧！找到<code>Editor</code>，选择<code>Font</code>，把<code>Font</code>字段设置成<code>Consolas</code>。</p>
<p>接下来就是<code>Color Scheme</code>，也就是非常快乐的调颜色阶段。<del>（我曾经花了一下午调颜色……）</del></p>
<p><strong>为什么需要调颜色？</strong></p>
<p>C++是一门拥有<del>过于</del>丰富特性的语言，不同的标志类型和语法特性可以通过不同的颜色清晰地体现出来。而默认的配色方案比较单调，这时就可以充分发挥你DIY的功力了。</p>
<p>而且屏幕上五彩斑斓（但不要调得太花了）的代码本身就会让你赏心悦目呢！</p>
<p>还有，配色不仅仅是上不同的颜色，还可以选择加粗、斜体或者加阴影。所以，可以发挥的空间很大呢。</p>
<p>如果第一次使用，还比较陌生，也可以照搬我当前用的配置。详见后文<strong>导入配色方案</strong>。</p>
<p>与C++关系比较大的，应该是<code>General</code>、<code>Language Defaults</code>和<code>C/C++</code>。调这些就行了。</p>
<p>额……说是进阶的配置，其实也就这些。不过，应该已经可以很好地提升编程体验了~</p>
<hr>
<h3 id="导入配色方案"><a href="#导入配色方案" class="headerlink" title="导入配色方案"></a>导入配色方案</h3><p>如果需要我自己用的配色方案，首先<a href="https://unidy2002.github.io/files/Splendid.icls">下载</a>。</p>
<p>然后，在<code>Settings</code>的<code>Editor</code>下<code>Color Scheme</code>主菜单中，有一个<code>Scheme</code>下拉列表，右边还有一个小齿轮的，点击小齿轮，<code>Import Scheme</code>，把外部配色方案导入IDE，应该就可以了。</p>
<p>当然，导入之后你也可以自己继续进行一定的微调。</p>
<h3 id="关于TabNine"><a href="#关于TabNine" class="headerlink" title="关于TabNine"></a>关于TabNine</h3><p>这个东西介绍见<a href="https://tabnine.com/" target="_blank" rel="noopener">官网</a>，不过其实也不用去看，只要知道它可以有效地对你接下来要输入的代码进行预测，并提供代码补全建议。</p>
<p>在CLion中使用时，如果它给的第一条建议正好就是你想要的，那就直接按回车。如果是后面的某条建议，那就先按几次下键，然后再回车。</p>
<p><strong>初次使用的时候，需要先写几段代码，相当于训练一下你的TabNine，让它熟悉你的代码风格，所以一开始它不会给你提示（你这时候看到的代码补全是IDE预设的）。等用一段时间，你会发现TabNine变得越来越聪明了。</strong></p>
<p><strong>TabNine有一个缺陷，就是比较占CPU（毕竟自带机器学习）。</strong>反正我敲代码比较快的时候会发现排风扇也在呼呼转。</p>
<p>然后可能会有一些小bug。<del>（而且TabNine为CLion做的插件似乎不太上心……？）</del></p>
<p>如果需要停用/卸载TabNine，屏幕左上角<code>File-&gt;Settings-&gt;Plugins-&gt;TabNine-&gt;Disable/Uninstall</code>。</p>
<hr>
<h2 id="技巧与注意事项"><a href="#技巧与注意事项" class="headerlink" title="技巧与注意事项"></a>技巧与注意事项</h2><ol>
<li><p>CLion的代码以项目为单位，一个项目中可以有很多很多文件，它们之间可以相互引用。但切记：<strong>正常情况下，一个项目中<code>main</code>函数只允许有一个</strong>。也就是说如果你完成了一道作业题想做下一道，不要在同一个项目中新建另一个cpp文件（并放入另一道题的<code>main</code>），要么重开一个项目，要么直接把上一道题的代码清空（显然后面这种方式更快捷，也更省空间）。</p>
<blockquote>
<p>坦诚地说，因为无论代码内容有多少，CLion都会生成一个完整的项目文件，所以如果只是为了完成一些小型程序而使用CLion，确实比较浪费电脑资源。不过采用直接清空上一份代码的方式可以规避这一困境，而且CLion用起来真的舒服。</p>
</blockquote>
</li>
<li><p>熟练运用组合键<code>Ctrl+Alt+L</code>。它可以将你的代码格式化，增强代码可读性。（像我现在已经敲几行就整理一下代码了……简直过于方便……）</p>
</li>
<li><p>重视一下IDE给出的Warning(s)（虽然绝不以消除所有Warning(s)为目标）。CLion给的Warning(s)质量还是普遍比较高的。首先，它会在右侧的滚动条处以黄色表示出来，方便你看看哪里还有需要注意的地方。然后，不同级别和类型的Warning(s)会用不同的方式在代码中呈现出来<strong>（有些地方的代码会变成灰色，有些则是高亮出来）</strong>，鼠标悬浮在上方就能看到具体的提示。其中，<code>Clang-Tidy</code>类型的Warning(s)一般可以忽略。</p>
<blockquote>
<p><code>Typo</code>类型的Warning(s)表示拼写错误。虽然拼写错误并不会直接导致程序的错误，但还是尽量避免。</p>
<p>如果确实是单词拼错了，把光标放到那个单词处，按下组合键<code>Alt+Enter</code>，选择<code>Typo: Rename to...</code>，然后进行更正。它会把项目中这个所有出现这个变量的地方一起改好。</p>
<p>如果这个单词确实存在，只是IDE没有收录，还是<code>Alt+Enter</code>，把它保存到<code>project-level dictionary</code>。</p>
<p>如果你的变量名是多个单词的组合，请使用小驼峰命名法（<code>smallCamelCase</code>）、大驼峰命名法（<code>BigCamelCase</code>）、使用下划线分隔的小写字母命名法（<code>lower_case_with_underscores</code>）、使用下划线分隔的大写字母命名法（<code>UPPER_CASE_WITH_UNDERSCORES</code>）。</p>
<p>如果你的变量名是汉语拼音甚至是汉语拼音缩写……还是算了吧……请设想一下在别人的代码中看到<code>bt</code>、<code>wz</code>、<code>djadd</code>等名称时内心的崩溃感……</p>
<p><del>当然我不会告诉你最新的语言标准中允许真的用汉字做变量名……（试试<code>int 测试;</code>）</del></p>
</blockquote>
<p>利用好Warning(s)提示可以有效地避免一些低级错误。试着在IDE中粘贴以下代码（不用去运行），看看它给出了哪些Warning(s)。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">foo</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; m;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; n * m &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">culculate</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; a + b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    foo(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> s;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; s &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">10</span>][<span class="number">10</span>] = &#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; a[i][j] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">while</span> (k &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//Do something but forget to update the variable `k`</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> bar[<span class="number">5</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">9</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (bar[i] = <span class="number">4</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (flag)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"true"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    culculate(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"The end."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>左侧的项目文件结构窗口如果不需要用，可以点击<code>-</code>关掉。不过如果想把它再开出来，双击屏幕上方的文件路径条（例如<code>HelloWorld&gt;main.cpp</code>）即可。（当然，单击路径条也有相应的功能。）</p>
</li>
<li><p>屏幕最左下角的那个按钮可以显示拓展功能框。不过一般的用途是，如果一不小心把输出窗口关掉了，想再开出来，鼠标悬停在上面，点<code>Run</code>。<del>（前提是你得要先run过一遍当前的代码。）</del></p>
</li>
<li><p>如果想要使用Windows系统自带的黑框运行程序，或者是想找到项目生成的<code>.exe</code>文件，在哪找呢？在文件资源管理器中找到你这个项目代码的位置，接着找到<code>cmake-build-debug</code>文件夹，里面就能找到那个<code>.exe</code>文件了。</p>
</li>
<li><p>（未完待续……）</p>
</li>
</ol>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>JetBrains家的产品好是好，但是也有坏处，就是吃内存。所以有人说</p>
<blockquote>
<p>JetBrains：从入门到破产</p>
</blockquote>
<p><del>（因为你可能会为了提升JetBrains产品的使用体验而去买很多很多内存条……反正我还没这么干过）</del></p>
<p>JetBrains家的产品还有更大的一个坏处，就是一旦用了，就再也不想用其他家的IDE了，所谓</p>
<blockquote>
<p>JetBrains：从入门到上瘾</p>
</blockquote>
<p>不过，在我看来，JetBrains的IDE最大的坏处，就是一旦你用了它的一款IDE，就会接着安装它的其它语言的IDE。这不，我的电脑里，从<code>IntelliJ IDEA</code>到<code>CLion</code>，再到<code>PyCharm</code>，以及<code>WebStorm</code>……</p>
<p>有机会再写写JetBrains家别的产品的入坑教程，安利就要安利到底~</p>
]]></content>
      <categories>
        <category>技术宅</category>
      </categories>
      <tags>
        <tag>IDE</tag>
        <tag>JetBrains</tag>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>写在前面</title>
    <url>/2019/11/26/%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2/</url>
    <content><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="请输入密码" />
    <label for="pass">请输入密码</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">

</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>碎碎念</category>
      </categories>
      <tags>
        <tag>随想</tag>
      </tags>
  </entry>
</search>
